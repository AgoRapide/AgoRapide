// Copyright (c) 2016, 2017 Bjørn Erling Fløtten, Trondheim, Norway
// MIT licensed. Details at https://github.com/AgoRapide/AgoRapide/blob/master/LICENSE
using System;
using System.ComponentModel;
using AgoRapide;
using AgoRapide.Core;
using AgoRapide.Database;
using AgoRapide.API;

namespace AgoRapideSample {

    [Enum(
        Description = "The central vision of AgoRapide is to put as much as possible of your application logic into this enum (together with -" + nameof(CoreP) + "-)",
        LongDescription =
            "A lot of API-functionality is autogenerated based on this enum:\r\n" +
            "1) Autogenerating of -" + nameof(APIMethod) + "- like -" + nameof(CoreAPIMethod.AddEntity) + "-\r\n" +
            "2) Validation of input parameters in -" + nameof(BaseController.TryGetRequest) + "-\r\n" + 
            "3) Documentation with sample parameters.\r\n" +
            "4) Unit testing.\r\n" +
            "and so on and so on",
        AgoRapideEnumType = EnumType.PropertyKey
    )]
    public enum P {
        None,

        [PropertyKey(
            Description = "Used for demo-method in -" + nameof(AnotherController.DemoDoubler) + "-",
            SampleValues = new string[] { "42", "1968", "2001" },
            InvalidValues = new string[] { "1.0" },
            Type = typeof(long))]
        SomeNumber,
    }

    public static class ExtensionsP {
        public static PropertyKey A(this P p) => PropertyKeyMapper.GetA(p);
    }

}