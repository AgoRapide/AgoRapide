// Copyright (c) 2016, 2017, 2018 Bjørn Erling Fløtten, Trondheim, Norway
// MIT licensed. Details at https://github.com/AgoRapide/AgoRapide/blob/master/LICENSE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AgoRapide.Core;
using AgoRapide.Database;
using AgoRapide.API;

namespace AgoRapide {

    [Enum(
        AgoRapideEnumType = EnumType.DocumentationOnlyEnum,
        Description =
            "Categories different types of enum used in AgoRapide. The most important one is " + nameof(PropertyKey) + ".\r\n" +
            "Note how this enum -" + nameof(EnumType) + "- is itself a -" + nameof(EnumType.DocumentationOnlyEnum) + "-"
    )]
    public enum EnumType {

        None,

        [EnumValue(
            Description =
                "The most important type of enum in AgoRapide.\r\n" +
                "The central vision of AgoRapide is to put as much as possible of your application logic into these enums (like -" + nameof(CoreP) + "-, -" + nameof(ResultP) + "- and so on).\r\n" +
                "" +
                "Constitutes keys for -" + nameof(BaseEntity) + "- -" + nameof(BaseEntity.Properties) + "- collection.",
            LongDescription =
                "A lot of API-functionality is autogenerated based on these enums like:\r\n" +
                "1) Autogenerating of -" + nameof(APIMethod) + "- like -" + nameof(CoreAPIMethod.AddEntity) + "-\r\n" +
                "2) Validation of input parameters in -" + nameof(BaseController.TryGetRequest) + "-\r\n" +
                "3) Documentation with sample parameters.\r\n" +
                "4) Unit testing.\r\n" +
                "and so on and so on.\r\n" +
                "" +
                "Corresponding -" + nameof(BaseAttribute) + "- is -" + nameof(EnumAttribute) + "- / -" + nameof(PropertyKeyAttribute) + "-. " +
                "All -" + nameof(PropertyKey) + "- map towards -" + nameof(CoreP) + "- at application startup through -" + nameof(PropertyKeyMapper) + "-"
            )]
        PropertyKey,

        [EnumValue(
            Description = "\"Ordinary\" enums used for indicating range of valid values for a given key",
            LongDescription = "Corresponding -" + nameof(BaseAttribute) + "- is -" + nameof(EnumAttribute) + "- / -" + nameof(EnumValueAttribute) + "-. "
        )]
        EnumValue,

        [EnumValue(
        Description = "Provides a central repository of explanation of terms that are not present in the C# code.",
        LongDescription = "Corresponding -" + nameof(BaseAttribute) + "- is -" + nameof(EnumAttribute) + "- / -" + nameof(EnumValueAttribute) + "-. "
        )]
        DocumentationOnlyEnum,
    }
}